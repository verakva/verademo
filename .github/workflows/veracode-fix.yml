on:
  pull_request:
    branches: [main]
  workflow_dispatch:



jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v1 # Make java accessible on path so the uploadandscan action can run.
        with: 
          java-version: '11'

      - name: Check for Maven build
        id: check_maven
        uses: andstor/file-existence-action@v1
        with:
          files: "*/pom.xml"

      - name: Check for Gradle build
        id: check_gradle
        uses: andstor/file-existence-action@v1
        with:
          files: "build.gradle"

      - name: Build application with mvn
        if: steps.check_maven.outputs.files_exists == 'true'
        run: mvn -B package --file app/pom.xml

      - name: Build application with gradle
        if: steps.check_gradle.outputs.files_exists == 'true'
        run: gradle clean build

      - uses: actions/upload-artifact@v4 # Copy files from repository to docker container so the next uploadandscan action can access them.
        with:
          path: '**/verademo.war' # Wildcards can be used to filter the files copied into the container. See: https://github.com/actions/upload-artifact
 
        
  pipeline_scan:
      needs: build
      runs-on: ubuntu-latest
      name: pipeline scan
      steps:
        - name: checkout repo
          uses: actions/checkout@v3

        - name: get archive
          uses: actions/download-artifact@v4
          with:
            name: artifact.zip
        - name: pipeline-scan action step
          id: pipelien-scan
          uses: veracode/Veracode-pipeline-scan-action@esd-true
          with:
            vid: ${{ secrets.VID }}
            vkey: ${{ secrets.VKEY }}
            file: "artifact.zip" 
            request_policy: "VeraDemo Policy"
            debug: 1
            fail_build: false

  veracode-fix:
    runs-on: ubuntu-latest
    needs: pipeline_scan
    name: create fixes
    permissions: write-all
    steps:
      - name: checkout repo
        uses: actions/checkout@v3

      - name: get flaw file
        uses: actions/download-artifact@v4
        with:
          name: Veracode Pipeline-Scan Results
          
      - name: Create fixes from static findings
        id: convert
        uses: Veracode/veracode-fix@main
        with:
          inputFile: results.json
          vid: ${{ secrets.VID }}
          vkey: ${{ secrets.VKEY }}
          source_base_path_1: "com/:src/main/java/com/"
          source_base_path_2: "WEB-INF:src/main/webapp/WEB-INF"
          language: java
          cwe: 89,117
          fixType: 'single'
          debug: false
          prComment: true
          files: 'all'
          codeSuggestion: false
          createPR: true
